services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cektagihan_app
    ports:
      - "8000:8000"
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - db
      - redis
    networks:
      - cek_tagihan_network

  web:
    image: nginx:latest
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - cek_tagihan_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email iqbaljalaludin1309@gmail.com -d cektagihan.iqbalweb.my.id --agree-tos

  db:
    image: mysql:8
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: cek_tagihan
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: cektagihan
      MYSQL_PASSWORD: '@cektagihan098'
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - cek_tagihan_network

  redis:
    image: redis:latest
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - cek_tagihan_network

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: queue_worker
    restart: unless-stopped
    working_dir: /var/www
    command: ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
    depends_on:
      - app
      - redis
    networks:
      - cek_tagihan_network

networks:
  cek_tagihan_network:
    driver: bridge


volumes:
  db_data:
    driver: local
